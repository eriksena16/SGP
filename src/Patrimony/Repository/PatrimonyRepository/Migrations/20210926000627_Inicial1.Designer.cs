// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGP.Patrimony.Repository.PatrimonyRepository;

namespace SGP.Patrimony.Repository.PatrimonyRepository.Migrations
{
    [DbContext(typeof(SGPContext))]
    [Migration("20210926000627_Inicial1")]
    partial class Inicial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EquipamentoModeloDeEquipamento", b =>
                {
                    b.Property<long>("EquipamentosEquipamentoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ModeloDeEquipamentosId")
                        .HasColumnType("bigint");

                    b.HasKey("EquipamentosEquipamentoId", "ModeloDeEquipamentosId");

                    b.HasIndex("ModeloDeEquipamentosId");

                    b.ToTable("EquipamentoModeloDeEquipamento");
                });

            modelBuilder.Entity("SGP.Model.Entity.Equipamento", b =>
                {
                    b.Property<long>("EquipamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoriaDoItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CategoriaDoItemId1")
                        .HasColumnType("bigint");

                    b.Property<long>("ClassificacaoDeAtivosId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassificacaoDeAtivosId1")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataDeCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipamentoStatus")
                        .HasColumnType("int");

                    b.Property<int>("EstadoDeConservacao")
                        .HasColumnType("int");

                    b.Property<long>("FabricanteId")
                        .HasColumnType("bigint");

                    b.Property<long>("ModeloDeEquipamentoId")
                        .HasColumnType("bigint");

                    b.Property<string>("NotaFiscalUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumeroDePatrmonio")
                        .HasColumnType("bigint");

                    b.Property<string>("NumeroDeSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ResponsavelDoEquipamentoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ResponsavelDoEquipamentoId1")
                        .HasColumnType("bigint");

                    b.Property<long>("SetorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SetorId1")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ValorAtual")
                        .HasColumnType("money");

                    b.Property<decimal>("ValorDeCompra")
                        .HasColumnType("money");

                    b.HasKey("EquipamentoId");

                    b.HasIndex("CategoriaDoItemId");

                    b.HasIndex("CategoriaDoItemId1");

                    b.HasIndex("ClassificacaoDeAtivosId");

                    b.HasIndex("ClassificacaoDeAtivosId1");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("ModeloDeEquipamentoId");

                    b.HasIndex("ResponsavelDoEquipamentoId");

                    b.HasIndex("ResponsavelDoEquipamentoId1");

                    b.HasIndex("SetorId");

                    b.HasIndex("SetorId1");

                    b.ToTable("Equipamento");
                });

            modelBuilder.Entity("SGP.Model.Entity.Fabricante", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cep")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EquipamentoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoId");

                    b.ToTable("Fabricante");
                });

            modelBuilder.Entity("SGP.Model.Entity.GenericEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenericEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("GenericEntity");
                });

            modelBuilder.Entity("SGP.Model.Entity.CategoriaDoItem", b =>
                {
                    b.HasBaseType("SGP.Model.Entity.GenericEntity");

                    b.HasDiscriminator().HasValue("CategoriaDoItem");
                });

            modelBuilder.Entity("SGP.Model.Entity.ClassificacaoDeAtivos", b =>
                {
                    b.HasBaseType("SGP.Model.Entity.GenericEntity");

                    b.Property<int>("TaxaDeDepreciacao")
                        .HasColumnType("int");

                    b.Property<int>("VidaUtil")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ClassificacaoDeAtivos");
                });

            modelBuilder.Entity("SGP.Model.Entity.ModeloDeEquipamento", b =>
                {
                    b.HasBaseType("SGP.Model.Entity.GenericEntity");

                    b.Property<long>("FabricanteId")
                        .HasColumnType("bigint");

                    b.HasIndex("FabricanteId");

                    b.HasDiscriminator().HasValue("ModeloDeEquipamento");
                });

            modelBuilder.Entity("SGP.Model.Entity.ResponsavelDoEquipamento", b =>
                {
                    b.HasBaseType("SGP.Model.Entity.GenericEntity");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ResponsavelDoEquipamento");
                });

            modelBuilder.Entity("SGP.Model.Entity.Setor", b =>
                {
                    b.HasBaseType("SGP.Model.Entity.GenericEntity");

                    b.HasDiscriminator().HasValue("Setor");
                });

            modelBuilder.Entity("EquipamentoModeloDeEquipamento", b =>
                {
                    b.HasOne("SGP.Model.Entity.Equipamento", null)
                        .WithMany()
                        .HasForeignKey("EquipamentosEquipamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGP.Model.Entity.ModeloDeEquipamento", null)
                        .WithMany()
                        .HasForeignKey("ModeloDeEquipamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SGP.Model.Entity.Equipamento", b =>
                {
                    b.HasOne("SGP.Model.Entity.CategoriaDoItem", "CategoriaDoItem")
                        .WithMany()
                        .HasForeignKey("CategoriaDoItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SGP.Model.Entity.CategoriaDoItem", null)
                        .WithMany("Equipamento")
                        .HasForeignKey("CategoriaDoItemId1");

                    b.HasOne("SGP.Model.Entity.ClassificacaoDeAtivos", "ClassificacaoDeAtivos")
                        .WithMany()
                        .HasForeignKey("ClassificacaoDeAtivosId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SGP.Model.Entity.ClassificacaoDeAtivos", null)
                        .WithMany("Equipamento")
                        .HasForeignKey("ClassificacaoDeAtivosId1");

                    b.HasOne("SGP.Model.Entity.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGP.Model.Entity.ModeloDeEquipamento", "ModeloDeEquipamento")
                        .WithMany()
                        .HasForeignKey("ModeloDeEquipamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SGP.Model.Entity.ResponsavelDoEquipamento", "ResponsavelDoEquipamento")
                        .WithMany()
                        .HasForeignKey("ResponsavelDoEquipamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SGP.Model.Entity.ResponsavelDoEquipamento", null)
                        .WithMany("Equipamento")
                        .HasForeignKey("ResponsavelDoEquipamentoId1");

                    b.HasOne("SGP.Model.Entity.Setor", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SGP.Model.Entity.Setor", null)
                        .WithMany("Equipamento")
                        .HasForeignKey("SetorId1");

                    b.Navigation("CategoriaDoItem");

                    b.Navigation("ClassificacaoDeAtivos");

                    b.Navigation("Fabricante");

                    b.Navigation("ModeloDeEquipamento");

                    b.Navigation("ResponsavelDoEquipamento");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("SGP.Model.Entity.Fabricante", b =>
                {
                    b.HasOne("SGP.Model.Entity.Equipamento", null)
                        .WithMany("Fabricantes")
                        .HasForeignKey("EquipamentoId");
                });

            modelBuilder.Entity("SGP.Model.Entity.ModeloDeEquipamento", b =>
                {
                    b.HasOne("SGP.Model.Entity.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("SGP.Model.Entity.Equipamento", b =>
                {
                    b.Navigation("Fabricantes");
                });

            modelBuilder.Entity("SGP.Model.Entity.CategoriaDoItem", b =>
                {
                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("SGP.Model.Entity.ClassificacaoDeAtivos", b =>
                {
                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("SGP.Model.Entity.ResponsavelDoEquipamento", b =>
                {
                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("SGP.Model.Entity.Setor", b =>
                {
                    b.Navigation("Equipamento");
                });
#pragma warning restore 612, 618
        }
    }
}
