// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGP.Data;

namespace SGP.Migrations
{
    [DbContext(typeof(SGPContext))]
    [Migration("20210405143730_Modelo")]
    partial class Modelo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGP.Models.Categorias.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SGP.Models.Classificacoes.Classificacao", b =>
                {
                    b.Property<int>("ClassificacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VidaUtil")
                        .HasColumnType("int");

                    b.Property<int>("taxa")
                        .HasColumnType("int");

                    b.HasKey("ClassificacaoID");

                    b.ToTable("Classificacoes");
                });

            modelBuilder.Entity("SGP.Models.Equipamentos.Equipamento", b =>
                {
                    b.Property<int>("EquipamentoID")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<int>("ClassificacaoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeCompra")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EstadoDeConservacao")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<int>("MarcaID")
                        .HasColumnType("int");

                    b.Property<int>("ModeloID")
                        .HasColumnType("int");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsavelID")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SetorID")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAtual")
                        .HasColumnType("money");

                    b.Property<decimal>("ValorDeCompra")
                        .HasColumnType("money");

                    b.HasKey("EquipamentoID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("ClassificacaoID");

                    b.HasIndex("MarcaID");

                    b.HasIndex("ModeloID");

                    b.HasIndex("ResponsavelID");

                    b.HasIndex("SetorID");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("SGP.Models.Marcas.Marca", b =>
                {
                    b.Property<int>("MarcaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaID");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("SGP.Models.Modelos.Modelo", b =>
                {
                    b.Property<int>("ModeloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModeloID");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("SGP.Models.Responsaveis.Responsavel", b =>
                {
                    b.Property<int>("ResponsavelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResponsavelID");

                    b.ToTable("Responsaveis");
                });

            modelBuilder.Entity("SGP.Models.Setores.Setor", b =>
                {
                    b.Property<int>("SetorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SetorID");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("SGP.Models.Equipamentos.Equipamento", b =>
                {
                    b.HasOne("SGP.Models.Categorias.Categoria", "Categoria")
                        .WithMany("Equipamentos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGP.Models.Classificacoes.Classificacao", "Classificacao")
                        .WithMany("Equipamentos")
                        .HasForeignKey("ClassificacaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGP.Models.Marcas.Marca", "Marca")
                        .WithMany("Equipamentos")
                        .HasForeignKey("MarcaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGP.Models.Modelos.Modelo", "Modelo")
                        .WithMany("Equipamentos")
                        .HasForeignKey("ModeloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGP.Models.Responsaveis.Responsavel", "Responsavel")
                        .WithMany("Equipamentos")
                        .HasForeignKey("ResponsavelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGP.Models.Setores.Setor", "Setor")
                        .WithMany("Equipamentos")
                        .HasForeignKey("SetorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Classificacao");

                    b.Navigation("Marca");

                    b.Navigation("Modelo");

                    b.Navigation("Responsavel");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("SGP.Models.Categorias.Categoria", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("SGP.Models.Classificacoes.Classificacao", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("SGP.Models.Marcas.Marca", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("SGP.Models.Modelos.Modelo", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("SGP.Models.Responsaveis.Responsavel", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("SGP.Models.Setores.Setor", b =>
                {
                    b.Navigation("Equipamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
